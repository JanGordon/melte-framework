make:
//@melte preserve state: client
var globalValue = "hi" //preserver in js head

//@melte prsererve state: storage
var webStorageValue = "hello" //store with webStorage, use mutationObsevere to update value in storage

//@melte prsererve state: IndexedDB
var indexedDB = "This is indexedDb" //store in indexedDB

//@melte prsererve state: url
var 

be preserverved on route chaneg
this should be put in inlined js in head of out.html becasue flamethrower keeps state here
but
var value = "hi"

be able to fully store all state to client, webstorage, indexedDB and maybe even the url

should be set to null and any code on the rout eshould be purged

might have to reqrite flamethrower to allow for html fragments to preserve state

to preserve html fragments across routes:
<h1>{count}</h1>
will work by searching through html tree for these and then replace before loading
this means that the page will not have layout shift and will be quick
during this time, a mutuation observer should be added to this varibale and should be updated whenever varibale chnages.


dynamic routes need to be added:
[hello].html
every time page is loaded rebuild [hello].html or just have js that extracts it and sets the varibale, "hello" to it

chunk js bundles for each event listener

remmeber scroll position chnagng routes

[handler].go
run this evert time page is loaded


make the builder generate js bundle in chunks to be lazy loaded when the component requiring them comes into view